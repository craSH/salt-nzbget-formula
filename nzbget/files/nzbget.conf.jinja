{%- from "nzbget/map.jinja" import nzbget with context -%}

{%- set config = salt['pillar.get']('nzbget:config', {}) -%}

# Managed by saltstack.
#
# See nzbget docs below for values, or read the template/pillar example.
#
# This ({{ nzbget.release.version }} release) version:
#   {{ nzbget.release.config_doc }}
#
# Latest source version:
#   {{ nzbget.release.config_latest_doc }}
#


##############################################################################
### PATHS                                                                  ###

MainDir={{ config.get('main_dir', nzbget.data_dir) }}
DestDir={{ config.get('dest_dir', '${MainDir}/dst') }}
InterDir={{ config.get('inter_dir', '${MainDir}/inter') }}
NzbDir={{ config.get('nzb_dir', '${MainDir}/nzb') }}
QueueDir={{ config.get('queue_dir', '${MainDir}/queue') }}
TempDir={{ config.get('temp_dir', '${MainDir}/tmp') }}
WebDir={{ config.get('web_dir', '/usr/share/nzbget/webui') }}
ScriptDir={{ config.get('script_dir', '${MainDir}/scripts') }}
LockFile={{ config.get('lock_file', nzbget.lock_file) }}
LogFile={{ config.get('log_file', nzbget.log_file) }}
ConfigTemplate={{ config.get('config_template', '/usr/share/nzbget/nzbget.conf') }}
RequiredDir={{ config.get('required_dir', [])|join(',') }}
CertStore={{ config.get('cert_store', '') }}


##############################################################################
### NEWS-SERVERS                                                           ###

{% for server in config.get('servers', []) %}

# Server: {{ server.get('name', '') }} [{{ loop.index }}]
Server{{ loop.index }}.Active={{ 'yes' if server.get('active', True) else 'no' }}
Server{{ loop.index }}.Name={{ server.get('name', '') }}
Server{{ loop.index }}.Level={{ server.get('level', 0) }}
Server{{ loop.index }}.Optional={{ 'yes' if server.get('optional', False) else 'no' }}
Server{{ loop.index }}.Group={{ server.get('level', 0) }}
Server{{ loop.index }}.Host={{ server.host }}
Server{{ loop.index }}.Port={{ server.get('port', 119) }}
Server{{ loop.index }}.Username={{ server.get('user', '') }}
Server{{ loop.index }}.Password={{ server.get('pass', '') }}
Server{{ loop.index }}.JoinGroup={{ 'yes' if server.get('join_group', False) else 'no' }}
Server{{ loop.index }}.Encryption={{ 'yes' if server.get('encryption', False) else 'no' }}
Server{{ loop.index }}.Cipher={{ server.get('cipher', [])|join(':') }}
Server{{ loop.index }}.Connections={{ server.get('connections', 4) }}
Server{{ loop.index }}.Retention={{ server.get('retention', 0) }}
Server{{ loop.index }}.IpVersion={{ server.get('ip_version', 'auto') }}
Server{{ loop.index }}.Notes={{ server.get('notes', '') }}
{% endfor %}


##############################################################################
### SECURITY                                                               ###

ControlIP={{ config.get('control_ip', '0.0.0.0') }}
ControlPort={{ config.get('control_port', '6789') }}
ControlUsername={{ config.get('control_user', 'nzbget') }}
ControlPassword={{ config.get('control_pass', 'tegbzn6789') }}
RestrictedUsername={{ config.get('restricted_username', '') }}
RestrictedPassword={{ config.get('restricted_password', '') }}
AddUsername={{ config.get('add_username', '') }}
AddPassword={{ config.get('add_password', '') }}
FormAuth={{ 'yes' if config.get('form_auth', False) else 'no' }}
SecureControl={{ 'yes' if config.get('secure_control', False) else 'no' }}
SecurePort={{ config.get('secure_port', '6791') }}
SecureCert={{ nzbget.secure_dir ~ '/secure.cert' if config.get('secure_cert', False) else '' }}
SecureKey={{ nzbget.secure_dir ~ '/secure.key' if config.get('secure_key', False) else '' }}
AuthorizedIP={{ config.get('authorized_ips', [])|join(',') }}
CertCheck={{ 'yes' if config.get('cert_check', False) else 'no' }}
DaemonUsername={{ config.get('daemon_user', nzbget.user) }}
UMask={{ config.get('umask', '1000') }}


##############################################################################
### CATEGORIES                                                             ###

{% for category in config.get('categories', []) %}

# {{ category.name }}
Category{{ loop.index }}.Name={{ category.name }}
Category{{ loop.index }}.DestDir={{ category.get('dest_dir', '') }}
Category{{ loop.index }}.Unpack={{ 'yes' if category.get('unpack', True) else 'no' }}
Category{{ loop.index }}.Extensions={{ category.get('extensions', [])|join(',') }}
Category{{ loop.index }}.Aliases={{ category.get('aliases', [])|join(',') }}
{% endfor %}


##############################################################################
### RSS FEEDS                                                              ###

{% for feed in config.get('feeds', []) %}

# {{ feed.name }}
Feed{{ loop.index }}.Name={{ feed.get('name', '') }}
Feed{{ loop.index }}.URL={{ feed.get('url', '') }}
Feed{{ loop.index }}.Filter={{ feed.get('filter', [])|join('%') }}
Feed{{ loop.index }}.Interval={{ feed.get('interval', 15) }}
Feed{{ loop.index }}.Backlog={{ 'yes' if feed.get('back_log', True) else 'no' }}
Feed{{ loop.index }}.PauseNzb={{ 'yes' if feed.get('pause_nzb', False) else 'no' }}
Feed{{ loop.index }}.Category={{ feed.get('category', '') }}
Feed{{ loop.index }}.Priority={{ feed.get('priority', 0) }}
Feed{{ loop.index }}.Extensions={{ feed.get('extensions', [])|join(',') }}
{% endfor %}


##############################################################################
### INCOMING NZBS                                                          ###

AppendCategoryDir={{ 'yes' if config.get('append_category_dir', True) else 'no' }}
NzbDirInterval={{ config.get('nzb_dir_interval', 5) }}
NzbDirFileAge={{ config.get('nzb_dir_file_age', 60) }}
DupeCheck={{ 'yes' if config.get('dupe_check', True) else 'no' }}


##############################################################################
### DOWNLOAD QUEUE                                                         ###

SaveQueue={{ 'yes' if config.get('save_queue', True) else 'no' }}
FlushQueue={{ 'yes' if config.get('flush_queue', True) else 'no' }}
ReloadQueue={{ 'yes' if config.get('reload_queue', True) else 'no' }}
ContinuePartial={{ 'yes' if config.get('continue_partial', True) else 'no' }}
PropagationDelay={{ config.get('propagation_delay', 0) }}
Decode={{ 'yes' if config.get('decode', True) else 'no' }}
ArticleCache={{ config.get('article_cache', 0) }}
DirectWrite={{ 'yes' if config.get('direct_write', True) else 'no' }}
WriteBuffer={{ config.get('write_buffer', 0) }}
CrcCheck={{ 'yes' if config.get('crc_check', True) else 'no' }}
FileNaming={{ config.get('file_naming', 'auto') }}
ReorderFiles={{ 'yes' if config.get('reorder_files', True) else 'no' }}
PostStrategy={{ config.get('post_strategy', 'balanced') }}
DiskSpace={{ config.get('disk_space', 250) }}
NzbCleanupDisk={{ 'yes' if config.get('nzb_cleanup_disk', True) else 'no' }}
KeepHistory={{ config.get('keep_history', 30) }}
FeedHistory={{ config.get('feed_history', 7) }}


##############################################################################
### CONNECTION                                                             ###

ArticleRetries={{ config.get('article_retries', 3) }}
ArticleRetryInterval={{ config.get('article_retry_interval', 10) }}
ArticleTimeout={{ config.get('article_timeout', 60) }}
UrlRetries={{ config.get('url_retries', 3) }}
UrlInterval={{ config.get('url_retry_interval', 10) }}
UrlTimeout={{ config.get('url_timeout', 60) }}
TerminateTimeout={{ config.get('terminate_timeout', 600) }}
DownloadRate={{ config.get('download_rate', 0) }}
AccurateRate={{ 'yes' if config.get('accurate_rate', False) else 'no' }}
UrlConnections={{ config.get('url_connections', 4) }}
UrlForce={{ 'yes' if config.get('url_force', True) else 'no' }}
MonthlyQuota={{ config.get('monthly_quota', 0) }}
QuotaStartDay={{ config.get('quota_start_day', 1) }}
DailyQuota={{ config.get('daily_quota', 0) }}


##############################################################################
### LOGGING                                                                ###

WriteLog={{ config.get('write_log', 'append') }}
RotateLog={{ config.get('rotate_log', 3) }}
ErrorTarget={{ config.get('error_target', 'both') }}
WarningTarget={{ config.get('warning_target', 'both') }}
InfoTarget={{ config.get('info_target', 'both') }}
DetailTarget={{ config.get('detail_target', 'log') }}
DebugTarget={{ config.get('debug_target', 'log') }}
LogBufferSize={{ config.get('log_buffer_size', 1000) }}
NzbLog={{ 'yes' if config.get('nzb_log', True) else 'no' }}
BrokenLog={{ 'yes' if config.get('create_broken_log', True) else 'no' }}
CrashTrace={{ 'yes' if config.get('crash_trace', True) else 'no' }}
CrashDump={{ 'yes' if config.get('crash_dump', True) else 'no' }}
TimeCorrection={{ config.get('time_correction', 0) }}


##############################################################################
### DISPLAY (TERMINAL)                                                     ###

OutputMode={{ config.get('output_mode', 'curses') }}
CursesNzbName={{ 'yes' if config.get('curses_nzb_name', True) else 'no' }}
CursesGroup={{ 'yes' if config.get('curses_group', False) else 'no' }}
CursesTime={{ 'yes' if config.get('curses_time', False) else 'no' }}
UpdateInterval={{ config.get('update_interval', 200) }}


##############################################################################
### SCHEDULER                                                              ###                                                           ###

{% for task in config.get('tasks', []) %}

# Task: {{ loop.index }}
Task{{ loop.index }}.Time={{ task.get('time', ['08:00'])|join(',') }}
Task{{ loop.index }}.WeekDays={{ task.get('week_days', ['1-7'])|join(',') }}
Task{{ loop.index }}.Command={{ task.get('command', 'PauseDownload') }}
Task{{ loop.index }}.Param={{ task.get('param', '') }}
{% endfor %}


##############################################################################
### CHECK AND REPAIR                                                       ###

ParCheck={{ config.get('par_check', 'auto') }}
ParRepair={{ 'yes' if config.get('par_repair', True) else 'no' }}
ParScan={{ config.get('par_scan', 'extended') }}
ParQuick={{ 'yes' if config.get('par_quick', True) else 'no' }}
ParBuffer={{ config.get('par_buffer', 16) }}
ParThreads={{ config.get('par_threads', 0) }}
ParIgnoreExt={{ config.get('par_ignore_ext', ['.sfv', '.nzb', '.nfo'])|join(',') }}
ParRename={{ 'yes' if config.get('par_rename', True) else 'no' }}
RarRename={{ 'yes' if config.get('rar_rename', True) else 'no' }}
DirectRename={{ 'yes' if config.get('direct_rename', False) else 'no' }}
HealthCheck={{ config.get('health_check', 'park') }}
ParTimeLimit={{ config.get('par_time_limit', 0) }}
ParPauseQueue={{ 'yes' if config.get('par_pause_queue', False) else 'no' }}


##############################################################################
### UNPACK                                                                 ###

Unpack={{ 'yes' if config.get('unpack', True) else 'no' }}
DirectUnpack={{ 'yes' if config.get('direct_unpack', False) else 'no' }}
UnpackPauseQueue={{ 'yes' if config.get('unpack_pause_queue', False) else 'no' }}
UnpackCleanupDisk={{ 'yes' if config.get('unpack_cleanup_disk', True) else 'no' }}
UnrarCmd={{ config.get('unrar_cmd', 'unrar') }}
SevenZipCmd={{ config.get('seven_zip_cmd', '7z') }}
ExtCleanupDisk={{ config.get('ext_cleanup_disk', ['.par2', '.sfv', '_brokenlog.txt'])|join(',') }}
UnpackIgnoreExt={{ config.get('unpack_ignore_ext', ['.cbr'])|join(',') }}
UnpackPassFile={{ nzbget.secure_dir ~ '/passwds' if config.get('unpack_pass_file', False) else '' }}


##############################################################################
### EXTENSION SCRIPTS                                                      ###

Extensions={{ config.get('extensions', [])|join(',') }}
ScriptOrder={{ config.get('script_order', [])|join(',') }}
ScriptPauseQueue={{ 'yes' if config.get('script_pause_queue', False) else 'no' }}
ShellOverride={{ config.get('shell_override', [])|join(',') }}
EventInterval={{ config.get('event_interval', 0) }}
